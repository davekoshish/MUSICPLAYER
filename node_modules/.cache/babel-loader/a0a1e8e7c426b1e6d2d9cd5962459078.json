{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davek\\\\Desktop\\\\Project\\\\musicplayer\\\\musicpplayer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useRef } from 'react';\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport \"./styles/App.scss\";\nimport data from './data';\nimport Library from './components/Library';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const handlertimecontrol = e => {\n    const duration = e.target.duration;\n    const current = e.target.currentTime;\n    setsonginfo({ ...songinfo,\n      currentTime: current,\n      duration: duration\n    });\n  }; //by default we are setting the songinfo current time and duration be 0. dont put null here or it will give error\n\n\n  const [songinfo, setsonginfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(data()); //songs is a variable having deault value as data.   and the object having bulk of data\n\n  const [currentSong, setcurrentSong] = useState(songs[6]); //index of object  or array is been asked \n\n  const [isPlaying, setisPlaying] = useState(false); //by default we are giving isPlaying as false . (to know if a song is playing or not)\n  //sendingprop1 is just a keywords using which we can acess the propeties .\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Song, {\n      sendingprop1: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      setsonginfo: setsonginfo,\n      audioRef: audioRef,\n      sendingprop2: currentSong,\n      isPlaying: isPlaying,\n      setisPlaying: setisPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      songs: songs,\n      setcurrentSong: setcurrentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      //this audio tag is important in our whole app.\n      onTimeUpdate: handlertimecontrol,\n      onLoadedMetadata: handlertimecontrol,\n      ref: audioRef //here the source we have to pass. then it will create all the other properties by its own .\n      ,\n      src: sendingprop2.audio,\n      onChange: dragHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aq3+/cgd43W/2FeCaG1U+7OhquQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/davek/Desktop/Project/musicplayer/musicpplayer/src/App.js"],"names":["React","useState","useRef","Player","Song","data","Library","App","handlertimecontrol","e","duration","target","current","currentTime","setsonginfo","songinfo","audioRef","songs","setSongs","currentSong","setcurrentSong","isPlaying","setisPlaying","sendingprop2","audio","dragHandler"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,MAAvB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,kBAAkB,GAAIC,CAAD,IAAO;AAChC,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASD,QAA1B;AACA,UAAME,OAAO,GAAGH,CAAC,CAACE,MAAF,CAASE,WAAzB;AACAC,IAAAA,WAAW,CAAC,EAAE,GAAGC,QAAL;AAAeF,MAAAA,WAAW,EAAED,OAA5B;AAAqCF,MAAAA,QAAQ,EAAEA;AAA/C,KAAD,CAAX;AACD,GAJD,CADa,CAMb;;;AACA,QAAM,CAACK,QAAD,EAAWD,WAAX,IAA0Bb,QAAQ,CAAC;AACvCY,IAAAA,WAAW,EAAE,CAD0B;AAEvCH,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;AAIA,QAAMM,QAAQ,GAAGd,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAACI,IAAI,EAAL,CAAlC,CAZa,CAYgC;;AAC7C,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAACgB,KAAK,CAAC,CAAD,CAAN,CAA9C,CAba,CAa+C;;AAC5D,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,KAAD,CAA1C,CAda,CAcsC;AACnD;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,YAAY,EAAEkB;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEL,WAArB;AAAkC,MAAA,QAAQ,EAAEE,QAA5C;AAAsD,MAAA,YAAY,EAAEG,WAApE;AAAiF,MAAA,SAAS,EAAEE,SAA5F;AAAuG,MAAA,YAAY,EAAEC;AAArH;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEL,KAAhB;AAAuB,MAAA,cAAc,EAAEG;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AACA;AACE,MAAA,YAAY,EAAEZ,kBAFhB;AAGE,MAAA,gBAAgB,EAAEA,kBAHpB;AAIE,MAAA,GAAG,EAAEQ,QAJP,CAKE;AALF;AAME,MAAA,GAAG,EAAEO,YAAY,CAACC,KANpB;AAOE,MAAA,QAAQ,EAAEC;AAPZ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAjCQlB,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import {React,useState,useRef} from 'react';\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport \"./styles/App.scss\";\nimport data from './data';\nimport Library from './components/Library';\n\nfunction App() {\n  const handlertimecontrol = (e) => {\n    const duration = e.target.duration;\n    const current = e.target.currentTime;\n    setsonginfo({ ...songinfo, currentTime: current, duration: duration });\n  };\n  //by default we are setting the songinfo current time and duration be 0. dont put null here or it will give error\n  const [songinfo, setsonginfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  })\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(data());  //songs is a variable having deault value as data.   and the object having bulk of data\n  const [currentSong, setcurrentSong] = useState(songs[6])    //index of object  or array is been asked \n  const [isPlaying, setisPlaying] = useState(false)  //by default we are giving isPlaying as false . (to know if a song is playing or not)\n  //sendingprop1 is just a keywords using which we can acess the propeties .\n  return (\n    <div className=\"App\">\n      <Song sendingprop1={currentSong} />             \n      <Player setsonginfo={setsonginfo} audioRef={audioRef} sendingprop2={currentSong} isPlaying={isPlaying} setisPlaying={setisPlaying}/>\n      <Library songs={songs} setcurrentSong={setcurrentSong} />    \n      <audio\n      //this audio tag is important in our whole app.\n        onTimeUpdate={handlertimecontrol}\n        onLoadedMetadata={handlertimecontrol}\n        ref={audioRef}\n        //here the source we have to pass. then it will create all the other properties by its own .\n        src={sendingprop2.audio}\n        onChange={dragHandler}\n      ></audio>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}