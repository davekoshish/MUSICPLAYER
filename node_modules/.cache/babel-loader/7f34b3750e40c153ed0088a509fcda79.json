{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davek\\\\Desktop\\\\Project\\\\musicplayer\\\\musicpplayer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useRef } from \"react\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport \"./styles/App.scss\";\nimport data from \"./data\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const handlertimecontrol = e => {\n    const duration = e.target.duration;\n    const current = e.target.currentTime;\n    setsonginfo({ ...songinfo,\n      currentTime: current,\n      duration: duration\n    });\n  }; //by default we are setting the songinfo current time and duration be 0. dont put null here or it will give error\n\n\n  const [songinfo, setsonginfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(data()); //songs is a variable having deault value as data.   and the object having bulk of data\n\n  const [currentSong, setcurrentSong] = useState(songs[6]); //index of object  or array is been asked\n\n  const [isPlaying, setisPlaying] = useState(false); //by default we are giving isPlaying as false . (to know if a song is playing or not)\n\n  const [libraryStatus, setlibraryStatus] = useState(false); //sendingprop1 is just a keywords using which we can acess the propeties .\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      libraryStatus: libraryStatus,\n      setlibraryStatus: setlibraryStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Song, {\n      currentSong: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      songs: songs,\n      songinfo: songinfo,\n      setsonginfo: setsonginfo,\n      audioRef: audioRef,\n      currentSong: currentSong,\n      setcurrentSong: setcurrentSong,\n      isPlaying: isPlaying,\n      setisPlaying: setisPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      audioRef: audioRef,\n      songs: songs,\n      setcurrentSong: setcurrentSong,\n      setSongs: setSongs,\n      libraryStatus: libraryStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      //this audio tag is important in our whole app.\n      onTimeUpdate: handlertimecontrol,\n      onLoadedMetadata: handlertimecontrol,\n      ref: audioRef //here the source we have to pass. then it will create all the other properties by its own .\n      ,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lx9Xa0ER7M0JEF/mQt+PsCaywo8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/davek/Desktop/Project/musicplayer/musicpplayer/src/App.js"],"names":["React","useState","useRef","Player","Song","data","Library","Nav","App","handlertimecontrol","e","duration","target","current","currentTime","setsonginfo","songinfo","audioRef","songs","setSongs","currentSong","setcurrentSong","isPlaying","setisPlaying","libraryStatus","setlibraryStatus","audio"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,kBAAkB,GAAIC,CAAD,IAAO;AAChC,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASD,QAA1B;AACA,UAAME,OAAO,GAAGH,CAAC,CAACE,MAAF,CAASE,WAAzB;AACAC,IAAAA,WAAW,CAAC,EAAE,GAAGC,QAAL;AAAeF,MAAAA,WAAW,EAAED,OAA5B;AAAqCF,MAAAA,QAAQ,EAAEA;AAA/C,KAAD,CAAX;AACD,GAJD,CADa,CAMb;;;AACA,QAAM,CAACK,QAAD,EAAWD,WAAX,IAA0Bd,QAAQ,CAAC;AACvCa,IAAAA,WAAW,EAAE,CAD0B;AAEvCH,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;AAIA,QAAMM,QAAQ,GAAGf,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAACI,IAAI,EAAL,CAAlC,CAZa,CAY+B;;AAC5C,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAACiB,KAAK,CAAC,CAAD,CAAN,CAA9C,CAba,CAa6C;;AAC1D,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,KAAD,CAA1C,CAda,CAcsC;;AACnD,QAAM,CAACuB,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAAC,KAAD,CAAlD,CAfa,CAgBb;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,aAAa,EAAEuB,aAApB;AAAmC,MAAA,gBAAgB,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEL;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,QAAQ,EAAEF,QAFZ;AAGE,MAAA,WAAW,EAAED,WAHf;AAIE,MAAA,QAAQ,EAAEE,QAJZ;AAKE,MAAA,WAAW,EAAEG,WALf;AAME,MAAA,cAAc,EAAEC,cANlB;AAOE,MAAA,SAAS,EAAEC,SAPb;AAQE,MAAA,YAAY,EAAEC;AARhB;AAAA;AAAA;AAAA;AAAA,YAHF,eAaE,QAAC,OAAD;AACE,MAAA,QAAQ,EAAEN,QADZ;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,cAAc,EAAEG,cAHlB;AAIE,MAAA,QAAQ,EAAEF,QAJZ;AAKE,MAAA,aAAa,EAAEK;AALjB;AAAA;AAAA;AAAA;AAAA,YAbF,eAoBE;AACE;AACA,MAAA,YAAY,EAAEf,kBAFhB;AAGE,MAAA,gBAAgB,EAAEA,kBAHpB;AAIE,MAAA,GAAG,EAAEQ,QAJP,CAKE;AALF;AAME,MAAA,GAAG,EAAEG,WAAW,CAACM;AANnB;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAhDQlB,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import { React, useState, useRef } from \"react\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport \"./styles/App.scss\";\nimport data from \"./data\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  const handlertimecontrol = (e) => {\n    const duration = e.target.duration;\n    const current = e.target.currentTime;\n    setsonginfo({ ...songinfo, currentTime: current, duration: duration });\n  };\n  //by default we are setting the songinfo current time and duration be 0. dont put null here or it will give error\n  const [songinfo, setsonginfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(data()); //songs is a variable having deault value as data.   and the object having bulk of data\n  const [currentSong, setcurrentSong] = useState(songs[6]); //index of object  or array is been asked\n  const [isPlaying, setisPlaying] = useState(false); //by default we are giving isPlaying as false . (to know if a song is playing or not)\n  const [libraryStatus, setlibraryStatus] = useState(false);\n  //sendingprop1 is just a keywords using which we can acess the propeties .\n  return (\n    <div className=\"App\">\n      <Nav libraryStatus={libraryStatus} setlibraryStatus={setlibraryStatus}/>\n      <Song currentSong={currentSong} />\n      <Player\n        songs={songs}\n        songinfo={songinfo}\n        setsonginfo={setsonginfo}\n        audioRef={audioRef}\n        currentSong={currentSong}\n        setcurrentSong={setcurrentSong}\n        isPlaying={isPlaying}\n        setisPlaying={setisPlaying}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setcurrentSong={setcurrentSong}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        //this audio tag is important in our whole app.\n        onTimeUpdate={handlertimecontrol}\n        onLoadedMetadata={handlertimecontrol}\n        ref={audioRef}\n        //here the source we have to pass. then it will create all the other properties by its own .\n        src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}