{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davek\\\\Desktop\\\\Project\\\\musicplayer\\\\musicpplayer\\\\src\\\\components\\\\Librarysong.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function librarysong({\n  audioRef,\n  song,\n  songs,\n  setcurrentSong,\n  id,\n  setSongs\n}) {\n  //this is an indiviual song on the libary section\n  const songSelector = async () => {\n    await setcurrentSong(song);\n    audioRef.current.play();\n    const newSongs = songs.map(song => {\n      if (song.id === id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelector,\n    className: `library-song ${song.active ? 'selected' : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/davek/Desktop/Project/musicplayer/musicpplayer/src/components/Librarysong.js"],"names":["React","librarysong","audioRef","song","songs","setcurrentSong","id","setSongs","songSelector","current","play","newSongs","map","active","cover","name","artist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAClCC,EAAAA,QADkC;AAElCC,EAAAA,IAFkC;AAGlCC,EAAAA,KAHkC;AAIlCC,EAAAA,cAJkC;AAKlCC,EAAAA,EALkC;AAMlCC,EAAAA;AANkC,CAArB,EAOZ;AACD;AACA,QAAMC,YAAY,GAAG,YAAY;AAC/B,UAAMH,cAAc,CAACF,IAAD,CAApB;AACAD,IAAAA,QAAQ,CAACO,OAAT,CAAiBC,IAAjB;AACA,UAAMC,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAWT,IAAD,IAAQ;AACjC,UAAIA,IAAI,CAACG,EAAL,KAAUA,EAAd,EAAiB;AACf,eAAM,EACJ,GAAGH,IADC;AAEJU,UAAAA,MAAM,EAAC;AAFH,SAAN;AAID,OALD,MAMM;AACF,eAAM,EACN,GAAGV,IADG;AAENU,UAAAA,MAAM,EAAC;AAFD,SAAN;AAIH;AACF,KAbgB,CAAjB;AAcAN,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAlBD;;AAoBA,sBACE;AAAK,IAAA,OAAO,EAAEH,YAAd;AAA4B,IAAA,SAAS,EAAG,gBAAeL,IAAI,CAACU,MAAL,GAAc,UAAd,GAA0B,EAAG,EAApF;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEV,IAAI,CAACW;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,kBAAKX,IAAI,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKZ,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD","sourcesContent":["import React from \"react\";\r\n\r\nexport default function librarysong({\r\n  audioRef,\r\n  song,\r\n  songs,\r\n  setcurrentSong,\r\n  id,\r\n  setSongs,\r\n}) {\r\n  //this is an indiviual song on the libary section\r\n  const songSelector = async () => {\r\n    await setcurrentSong(song);\r\n    audioRef.current.play();\r\n    const newSongs = songs.map((song)=>{\r\n      if (song.id===id){\r\n        return{\r\n          ...song,\r\n          active:true,\r\n        };\r\n      }\r\n        else{\r\n          return{\r\n          ...song,\r\n          active:false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  return (\r\n    <div onClick={songSelector} className={`library-song ${song.active ? 'selected': \"\"}`}>\r\n      <img src={song.cover} />\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}