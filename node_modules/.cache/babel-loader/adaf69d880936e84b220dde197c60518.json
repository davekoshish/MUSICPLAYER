{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davek\\\\Desktop\\\\Project\\\\musicplayer\\\\musicpplayer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useRef } from 'react';\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport \"./styles/App.scss\";\nimport data from './data';\nimport Library from './components/Library';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(data()); //songs is a variable having deault value as data.   and the object having bulk of data\n\n  const [currentSong, setcurrentSong] = useState(songs[6]); //index of object  or array is been asked \n\n  const [isPlaying, setisPlaying] = useState(false); //by default we are giving isPlaying as false . (to know if a song is playing or not)\n  //sendingprop1 is just a keywords using which we can acess the propeties .\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Song, {\n      sendingprop1: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      sendingprop2: currentSong,\n      isPlaying: isPlaying,\n      setisPlaying: setisPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Library, {\n      songs: songs,\n      setcurrentSong: setcurrentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      //this audio tag is important in our whole app.\n      onTimeUpdate: handlertimecontrol,\n      onLoadedMetadata: handlertimecontrol,\n      ref: audioRef //here the source we have to pass. then it will create all the other properties by its own .\n      ,\n      src: sendingprop2.audio,\n      onChange: dragHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rrAOvIrr1vRxke5GbWUc75Qd5ig=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/davek/Desktop/Project/musicplayer/musicpplayer/src/App.js"],"names":["React","useState","useRef","Player","Song","data","Library","App","audioRef","songs","setSongs","currentSong","setcurrentSong","isPlaying","setisPlaying","handlertimecontrol","sendingprop2","audio","dragHandler"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,MAAvB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACI,IAAI,EAAL,CAAlC,CAFa,CAEgC;;AAC7C,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAN,CAA9C,CAHa,CAG+C;;AAC5D,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C,CAJa,CAIsC;AACnD;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,YAAY,EAAEU;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEA,WAAtB;AAAmC,MAAA,SAAS,EAAEE,SAA9C;AAAyD,MAAA,YAAY,EAAEC;AAAvE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEL,KAAhB;AAAuB,MAAA,cAAc,EAAEG;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AACA;AACE,MAAA,YAAY,EAAEG,kBAFhB;AAGE,MAAA,gBAAgB,EAAEA,kBAHpB;AAIE,MAAA,GAAG,EAAEP,QAJP,CAKE;AALF;AAME,MAAA,GAAG,EAAEQ,YAAY,CAACC,KANpB;AAOE,MAAA,QAAQ,EAAEC;AAPZ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAvBQX,G;;KAAAA,G;AAyBT,eAAeA,GAAf","sourcesContent":["import {React,useState,useRef} from 'react';\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport \"./styles/App.scss\";\nimport data from './data';\nimport Library from './components/Library';\n\nfunction App() {\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(data());  //songs is a variable having deault value as data.   and the object having bulk of data\n  const [currentSong, setcurrentSong] = useState(songs[6])    //index of object  or array is been asked \n  const [isPlaying, setisPlaying] = useState(false)  //by default we are giving isPlaying as false . (to know if a song is playing or not)\n  //sendingprop1 is just a keywords using which we can acess the propeties .\n  return (\n    <div className=\"App\">\n      <Song sendingprop1={currentSong} />             \n      <Player sendingprop2={currentSong} isPlaying={isPlaying} setisPlaying={setisPlaying}/>\n      <Library songs={songs} setcurrentSong={setcurrentSong} />    \n      <audio\n      //this audio tag is important in our whole app.\n        onTimeUpdate={handlertimecontrol}\n        onLoadedMetadata={handlertimecontrol}\n        ref={audioRef}\n        //here the source we have to pass. then it will create all the other properties by its own .\n        src={sendingprop2.audio}\n        onChange={dragHandler}\n      ></audio>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}