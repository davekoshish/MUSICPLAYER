{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davek\\\\Desktop\\\\Project\\\\musicplayer\\\\musicpplayer\\\\src\\\\components\\\\Player.js\",\n    _s2 = $RefreshSig$();\n\nimport { React, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  sendingprop2,\n  isPlaying,\n  setisPlaying\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const audioRef = useRef(null);\n\n  const playerhandler = () => {\n    _s();\n\n    if (isPlaying) {\n      audioRef.current.pause();\n      setisPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setisPlaying(!isPlaying);\n    }\n\n    ;\n\n    const handlertimecontrol = e => {\n      const duration = e.target.duration;\n      const current = e.target.currentTime;\n      setsonginfo({ ...songinfo,\n        currentTime: current,\n        duration: duration\n      });\n    };\n\n    const [songinfo, setsonginfo] = useState({\n      currentTime: null,\n      duration: null\n    });\n  };\n\n  _s(playerhandler, \"MEV+e7aEuN3LaJGzLPbNjJ6oK/o=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"end time \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playerhandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: handlertimecontrol,\n      ref: audioRef,\n      src: sendingprop2.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Player, \"0sm4EU6wFifmHvgu8ujVUSp82DM=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/davek/Desktop/Project/musicplayer/musicpplayer/src/components/Player.js"],"names":["React","useRef","useState","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","Player","sendingprop2","isPlaying","setisPlaying","audioRef","playerhandler","current","pause","play","handlertimecontrol","e","duration","target","currentTime","setsonginfo","songinfo","audio"],"mappings":";;;AAAA,SAASA,KAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,MAAR,EAAeC,WAAf,EAA2BC,YAA3B,QAA8C,mCAA9C;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAcC,EAAAA,SAAd;AAAwBC,EAAAA;AAAxB,CAAD,KAA2C;AAAA;;AAAA;;AACxD,QAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB;;AACA,QAAMW,aAAa,GAAG,MAAM;AAAA;;AAE1B,QAAGH,SAAH,EAAa;AACXE,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACAJ,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAGD,KALD,MAMI;AACFE,MAAAA,QAAQ,CAACE,OAAT,CAAiBE,IAAjB;AACAL,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAAA;;AACD,UAAMO,kBAAkB,GAAIC,CAAD,IAAO;AAChC,YAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASD,QAA1B;AACA,YAAML,OAAO,GAAGI,CAAC,CAACE,MAAF,CAASC,WAAzB;AACAC,MAAAA,WAAW,CAAC,EAAC,GAAGC,QAAJ;AAAaF,QAAAA,WAAW,EAACP,OAAzB;AAAiCK,QAAAA,QAAQ,EAACA;AAA1C,OAAD,CAAX;AACD,KAJD;;AAKA,UAAM,CAACI,QAAD,EAAWD,WAAX,IAA0BnB,QAAQ,CAAC;AACvCkB,MAAAA,WAAW,EAAC,IAD2B;AAEvCF,MAAAA,QAAQ,EAAC;AAF8B,KAAD,CAAxC;AAID,GArBD;;AAFwD,KAElDN,aAFkD;;AAyBxD,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAuC,QAAA,IAAI,EAAC,IAA5C;AAAiD,QAAA,IAAI,EAAEP;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEO,aAA1B;AAAyC,QAAA,SAAS,EAAC,MAAnD;AAA0D,QAAA,IAAI,EAAC,IAA/D;AAAoE,QAAA,IAAI,EAAER;AAA1E;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,cAA3B;AAA0C,QAAA,IAAI,EAAC,IAA/C;AAAoD,QAAA,IAAI,EAAEE;AAA1D;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE;AAAO,MAAA,YAAY,EAAEU,kBAArB;AAAyC,MAAA,GAAG,EAAEL,QAA9C;AAAwD,MAAA,GAAG,EAAEH,YAAY,CAACe;AAA1E;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAzCD;;IAAMhB,M;;KAAAA,M;AA2CN,eAAeA,MAAf","sourcesContent":["import { React , useRef, useState} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlay,faAngleLeft,faAngleRight} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({sendingprop2,isPlaying,setisPlaying}) => {\r\n  const audioRef = useRef(null);\r\n  const playerhandler = () => {\r\n    \r\n    if(isPlaying){\r\n      audioRef.current.pause();\r\n      setisPlaying(!isPlaying);\r\n      \r\n      \r\n    }\r\n    else{\r\n      audioRef.current.play();\r\n      setisPlaying(!isPlaying);\r\n    };\r\n    const handlertimecontrol = (e) => {\r\n      const duration = e.target.duration;\r\n      const current = e.target.currentTime;\r\n      setsonginfo({...songinfo,currentTime:current,duration:duration});\r\n    };\r\n    const [songinfo, setsonginfo] = useState({\r\n      currentTime:null,\r\n      duration:null,\r\n      });\r\n  };\r\n  \r\n  return (\r\n    <div className=\"player\">\r\n      \r\n      <div className=\"time-control\">\r\n        <p>Start time</p>\r\n        <input type=\"range\" />\r\n        <p>end time </p>\r\n      </div>\r\n      <div className=\"player-control\">\r\n        <FontAwesomeIcon className='skip-back' size=\"2x\" icon={faAngleLeft}/>\r\n        <FontAwesomeIcon onClick={playerhandler} className='play' size=\"2x\" icon={faPlay}/>\r\n        <FontAwesomeIcon className='skip-forward' size=\"2x\" icon={faAngleRight}/>\r\n      </div>\r\n      <audio onTimeUpdate={handlertimecontrol} ref={audioRef} src={sendingprop2.audio}></audio>\r\n    </div>\r\n      );\r\n};\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}