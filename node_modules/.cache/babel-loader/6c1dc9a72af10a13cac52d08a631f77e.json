{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davek\\\\Desktop\\\\Project\\\\musicplayer\\\\musicpplayer\\\\src\\\\components\\\\Player.js\",\n    _s = $RefreshSig$();\n\nimport { React, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = ({\n  sendingprop2,\n  isPlaying,\n  setisPlaying\n}) => {\n  _s();\n\n  const audioRef = useRef(null);\n\n  const playerhandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setisPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setisPlaying(!isPlaying);\n    }\n  };\n\n  const handlertimecontrol = e => {\n    const duration = e.target.duration;\n    const current = e.target.currentTime;\n    setsonginfo({ ...songinfo,\n      currentTime: current,\n      duration: duration\n    });\n  };\n\n  const [songinfo, setsonginfo] = useState({\n    currentTime: null,\n    duration: null\n  });\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songinfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [getTime(songinfo.duration), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playerhandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: handlertimecontrol,\n      onLoadedMetadata: handlertimecontrol,\n      ref: audioRef,\n      src: sendingprop2.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"qK4jPoYoPVlg3YcQGG9dCwTHaHw=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/davek/Desktop/Project/musicplayer/musicpplayer/src/components/Player.js"],"names":["React","useRef","useState","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","Player","sendingprop2","isPlaying","setisPlaying","audioRef","playerhandler","current","pause","play","handlertimecontrol","e","duration","target","currentTime","setsonginfo","songinfo","getTime","time","Math","floor","slice","audio"],"mappings":"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","sourcesContent":["import { React, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({ sendingprop2, isPlaying, setisPlaying }) => {\r\n  const audioRef = useRef(null);\r\n  const playerhandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setisPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setisPlaying(!isPlaying);\r\n    }\r\n };\r\n\r\n  const handlertimecontrol = (e) => {\r\n    const duration = e.target.duration;\r\n    const current = e.target.currentTime;\r\n    setsonginfo({ ...songinfo, currentTime: current, duration: duration });\r\n  };\r\n  const [songinfo, setsonginfo] = useState({\r\n      currentTime: null,\r\n      duration: null,\r\n    });\r\n    const getTime = (time) =>{\r\n      return(\r\n        Math.floor(time/60) + \":\" +(\"0\"+Math.floor(time%60)).slice(-2)\r\n      );\r\n    };\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songinfo.currentTime)}</p>\r\n        <input type=\"range\" />\r\n        <p>{getTime(songinfo.duration)} </p>\r\n      </div>\r\n      <div className=\"player-control\">\r\n        <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\r\n        <FontAwesomeIcon\r\n          onClick={playerhandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n      <audio\r\n        onTimeUpdate={handlertimecontrol}\r\n        onLoadedMetadata={handlertimecontrol}\r\n        ref={audioRef}\r\n        src={sendingprop2.audio}\r\n\r\n      ></audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n"]},"metadata":{},"sourceType":"module"}